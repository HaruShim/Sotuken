@startuml robustness

left to right direction

' ユースケース名 (1つのみ)
usecase "従業員情報管理" as JYUGYOUIN

' Actors actor "" as
actor "管理者\n正規社員" as admin

' Boundaries boundary "" as 
boundary "ホーム画面" as home
boundary "従業員情報画面" as jjk
'従業員情報管理画面は従業員情報が一覧で確認できる

' Controls control "" as 
control "従業員一覧情報取得" as jjs_c

' Entities entity "" as
entity "従業員情報" as jj

admin -[hidden]left- JYUGYOUIN
admin --> home
home --> jjs_c:"「従業員情報」を\n押下"
jjs_c --> jjk

' Package 見やすくするのに使用してください
package "従業員情報新規登録"{
    boundary "従業員情報新規登録画面" as jst
    control "表示" as jst_c
    control "従業員情報登録" as jjt_c
    admin --> jjk
    jjk --> jst_c:"「新規登録」を\n押下"
    jst_c --> jst
    jst --> jjt_c:"従業員情報を入力\n「登録」を押下"
    jjt_c --> jjk
}

package "従業員情報参照"{
    boundary "従業員情報参照画面" as jjs

}

package "従業員情報参照"{
    boundary "従業員情報参照画面" as jjs

}

package "従業員情報削除"{
    boundary "従業員情報削除確認画面" as jsk
}

' -- と - を使い分ける
' - で結んだものを近くに、横並びに表示しようとしてくれる
' -- で結んだものはいい感じに配置しようとしてくれる

' 関連の向き
' A -left- B
' A -up- C
' A -right- D
' A -down- E


' together togetherブロック内で宣言された要素は近くに配置されます。
' together {
'     class A
'     class D
' }

' hidden レイアウトのためのヒントを与える
' B -[hidden]- E

@enduml