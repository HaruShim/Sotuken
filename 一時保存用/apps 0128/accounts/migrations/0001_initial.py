# Generated by Django 2.2.2 on 2022-01-18 17:12

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, editable=False, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Only num characters are allowed.')], verbose_name='従業員番号')),
                ('employment_status', models.SmallIntegerField(blank=True, choices=[(0, '管理者'), (1, '店長'), (2, '正規社員'), (3, '非正規社員')], null=True, verbose_name='雇用形態')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='氏名')),
                ('ruby_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='氏名(カナ)')),
                ('tel_num', models.CharField(blank=True, max_length=13, null=True, verbose_name='電話番号')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(0, '男性'), (1, '女性')], null=True, verbose_name='性別')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生年月日')),
                ('invalid_flg', models.BooleanField(blank=True, default=False, null=True, verbose_name='無効フラグ')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'custom_user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
